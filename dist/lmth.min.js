// https://github.com/chrisdotcode/lmth
// And without faith it is impossible to please God, because anyone who comes
// to Him must believe that He exists and that He rewards those who earnestly
// seek Him. - Hebrews 11:6
!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.lmth=e()}(this,function(){"use strict"
function t(e,n,r,i,o,a,s,c){if(!(this instanceof t))throw new Error("Uh-oh. You're creating a new Node without using the `new` keyword. This isn't allowed because Bad Stuff happens when you do that. What you more than likely want is one of the element functions attached to the Node object like so: `lmth.div(...)`. If you actually did want to create a plain node, you should use `Node.new(name, isVoid, id, class, style, attributes, content, children)` and avoid the manual construction with `new` where possible. If you really, really, really want to create a node with `new`, you can do so like this: `new Node(name, isVoid, class, style, attributes, content, children)`.")
return this.name=e,this.isVoid=n,this.id=r,this["class"]=i,this.style=o,this.attributes=a,this.content=s,this.children=c,this}function e(t){switch(typeof t){case"bool":case"number":case"string":return!0
default:return!1}}function n(t){return"[object Object]"===toString.call(t)}function r(t){return e(t)?"primitive":n(t)?"object":Array.isArray(t)?"array":void 0}function i(t){return"[object String]"===toString.call(t)}function o(t){var e={id:null,"class":[]}
if(i(t)){var r=t.split(/([#\.][^#\.]+)/)
r.forEach(function(t){t.startsWith("#")?e.id=t.substring(1):t.startsWith(".")&&e["class"].push(t.substring(1))})}else n(t)&&(Object.keys(t).forEach(function(n){e[n]=t[n]}),Array.isArray(e["class"])||(e["class"]=e["class"].split(" ")))
return e}function a(t){return String(t).replace(/&|<|>|"|'/g,function(t){switch(t){case"&":return"&amp;"
case"<":return"&lt;"
case">":return"&gt;"
case'"':return"&quot;"
case"'":return"&apos;"}})}function s(t,e){return e?t+'="'+a(e)+'"':t}function c(t){return Object.keys(t).reduce(function(e,n){return e+n+":"+t[n]+";"},"")}return t.prototype.toString=function(){return JSON.stringify(this)},t["new"]=function(e,n,r,i,o,a,s,c){return new t(e,n,r,i,o,a,s,c)},t.createElement=function(e,n){var a=n.isVoid||!1
return function(n,s,c){var u="",l={},d=[],f=r(n),h=r(s)
i(n)||"object"===f?l=n:"array"===f&&(d=n),"primitive"===h?u=s:"object"===h?l=s:"array"===h&&(d=s),"array"===r(c)&&(d=c)
var m=o(l),p=m.id,y=m["class"],b=m.style
return delete m.id,delete m["class"],delete m.style,t["new"](e,a,p,y,b,m,u,d)}},t.addElement=function(e,n){t[e]=t.createElement(e,n)},t.elements=["a","abbr","acronym","address","applet","article","aside","audio","b","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","button","canvas","caption","center","cite","code","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","html","i","iframe","image","ins","isindex","kbd","label","legend","li","listing","main","map","mark","marquee","menu","menuitem","meter","multicol","nav","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","picture","plaintext","pre","progress","q","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","small","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","tt","u","ul","var","video","xmp"],t.voidElements=["area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"],t.elements.forEach(function(e){t.addElement(e,{isVoid:!1})}),t.voidElements.forEach(function(e){t.addElement(e,{isVoid:!0})}),t.freeze=function(e){return t["new"](e.name,e.isVoid,e.id,e["class"],e.style,e.attributes,e.content,[])},t.prototype.transform=function(e){var n=this,r=[e(t.freeze(n))],i=n.children.map(function(t){return t.transform(e)})
return r.concat(i)},t.prototype.toList=function(){var t=this
return t.transform(function(t){return t})},t.prototype.traverse=function(e){var n=this,r=e(t.freeze(n)),i=n.children.map(function(t){return t.traverse(e)})
return r.children=i,r},t.prototype.render=function(){var t=this,e=Object.keys(t.attributes).reduce(function(e,n){return e+" "+s(n,t.attributes[n])},""),n=a(t.content)+t.children.reduce(function(t,e){return t+(i(e)?a(e):e.render())},"")
return"<"+t.name+(t.id?' id="'+t.id+'"':"")+(0!==t["class"].length?' class="'+t["class"].join(" ")+'"':"")+(t.style?' style="'+c(t.style)+'"':"")+e+">"+(t.isVoid&&0===t.children.length?"":n+"</"+t.name+">")},t.renderList=function(t){return t.map(function(t){return t.render()}).join("")},t.prototype.toDOM=function(t){t=t||document
var e=this,n=t.createElement(e.name)
return Object.keys(e.attributes).forEach(function(t){n.setAttribute(t,e.attributes[t])}),e.id&&(n.id=e.id),Array.isArray(e["class"])&&(n.className=e["class"].join(" ")),e.style&&n.setAttribute("style",c(e.style)),null!=e.content&&n.appendChild(t.createTextNode(e.content)),e.children.forEach(function(r){n.appendChild(i(r)?t.createTextNode(r):e.toDOM(t))}),n},t.appendListToDOM=function(t,e,n){e.forEach(function(e){t.appendChild(e.toDOM(n))})},t})
